/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Root */
        get: operations["root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health */
        get: operations["health_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/account/number": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Account Number */
        get: operations["read_account_number_account_number_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/account/summary": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Account Summary */
        get: operations["read_account_summary_account_summary_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/trades/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all trades
         * @description Get all trades
         */
        get: operations["read_trades_trades__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** OrderSchema */
        OrderSchema: {
            /** Id */
            id: number;
            /** Trade Id */
            trade_id: number;
            /** Client Id */
            client_id: number;
            /** Action */
            action: string;
            /** Total Quantity */
            total_quantity: number;
            /** Order Type */
            order_type: string;
            /** Lmt Price */
            lmt_price: number;
            /** Tif */
            tif: string;
            /** Oca Group */
            oca_group: string;
            /** Order Ref */
            order_ref: string;
            /** Transmit */
            transmit: boolean;
            /** Account */
            account: string;
            /** Clearing Intent */
            clearing_intent: string;
            /** Algo Strategy */
            algo_strategy: string;
            /** What If */
            what_if: boolean;
        };
        /** OrderStatusSchema */
        OrderStatusSchema: {
            /** Status */
            status: string;
            /** Filled */
            filled: number;
            /** Remaining */
            remaining: number;
            /** Avgfillprice */
            avgFillPrice: number;
            /** Permid */
            permId: number;
            /** Parentid */
            parentId: number;
            /** Lastfillprice */
            lastFillPrice: number;
            /** Clientid */
            clientId: number;
            /** Whyheld */
            whyHeld: string;
            /** Mktcapprice */
            mktCapPrice: number;
            /** Id */
            id: number;
        };
        /** TradeLogEntrySchema */
        TradeLogEntrySchema: {
            /**
             * Time
             * Format: date-time
             */
            time: string;
            /** Status */
            status: string;
            /** Message */
            message: string;
            /** Errorcode */
            errorCode: number;
            /** Id */
            id: number;
        };
        /** TradeSchema */
        TradeSchema: {
            /** Id */
            id: number;
            /**
             * Orders
             * @default []
             */
            orders: components["schemas"]["OrderSchema"][];
            /**
             * Order Statuses
             * @default []
             */
            order_statuses: components["schemas"]["OrderStatusSchema"][];
            /**
             * Logs
             * @default []
             */
            logs: components["schemas"]["TradeLogEntrySchema"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    health_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    read_account_number_account_number_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    read_account_summary_account_summary_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[][];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    read_trades_trades__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TradeSchema"][];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
